<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Snake</title>
    </head>
    <body>
        <canvas id="game-canvas" width="400" height="400"></canvas>
        <script>
            let canvas = document.getElementById('game-canvas');
            let ctx = canvas.getContext('2d');

            let tileSize = 20;
            let rows = canvas.height / tileSize;
            let cols = canvas.width / tileSize;

            // Змейка хранится как массив с объектами {x, y}
            let snake = [
                { x: 10, y: 10 },
                { x: 9, y: 10 },
                { x: 8, y: 10 }
            ];

            // Направление змейки
            let directionX = 1;  // Начинаем двигаться вправо
            let directionY = 0;

            // Еда
            let foodCoordinates = {
                x: Math.floor(Math.random() * cols),
                y: Math.floor(Math.random() * rows)
            };

            let score = 0;
            let gameOver = false;

            // Отрисовка сетки
            function drawGrid() {
                for (let x = 0; x < cols; x++) {
                    for (let y = 0; y < rows; y++) {
                        ctx.strokeStyle = 'lightgrey';
                        ctx.strokeRect(x * tileSize, y * tileSize, tileSize, tileSize);
                    }
                }
            }

            // Отрисовка змейки
            function drawSnake() {
                ctx.fillStyle = 'green';
                for (let i = 0; i < snake.length; i++) {
                    let segment = snake[i];
                    ctx.fillRect(segment.x * tileSize, segment.y * tileSize, tileSize, tileSize);
                }
            }

            // Отрисовка еды
            function drawFood() {
                ctx.fillStyle = 'red';
                ctx.fillRect(foodCoordinates.x * tileSize, foodCoordinates.y * tileSize, tileSize, tileSize);
            }

            function generateFood() {
                let newFoodX, newFoodY;

                do {
                    newFoodX = Math.floor(Math.random() * cols);
                    newFoodY = Math.floor(Math.random() * rows);
                } while (isFoodOnSnake(newFoodX, newFoodY));

                foodCoordinates = {x: newFoodX, y: newFoodY};
            }

            // Отрисовка счета
            function drawScore() {
                ctx.fillStyle = 'black';
                ctx.font = '20px Arial';
                ctx.fillText('Score: ' + score, 20, 30);  // Исправлено: используем fillText, а не fillRect
            }

            // Движение змейки
            function moveSnake() {
                // Добавляем новый сегмент головы, основываясь на направлении движения
                let head = { x: snake[0].x + directionX, y: snake[0].y + directionY };
                snake.unshift(head);  // Добавляем голову в начало

                // Проверка, съела ли змейка еду
                if (head.x === foodCoordinates.x && head.y === foodCoordinates.y) {
                    score++;  // Увеличиваем счет
                    generateFood();
                    } else {
                    snake.pop();  // Убираем последний сегмент, если еда не съедена
                }

                // Проверка столкновения со стенами
                if (head.x < 0 || head.x >= cols || head.y < 0 || head.y >= rows) { 
                    gameOver = true;
                    return;
                }

                // Проверка столкновения с самой собой
                for (let i = 1; i < snake.length; i++) {
                    if (head.x === snake[i].x && head.y === snake[i].y) {
                        gameOver = true;
                        return;
                    }
                }
            }

            // Проверка, не появилась ли еда на змейке
            function isFoodOnSnake(x, y) {
                for (let i = 0; i < snake.length; i++) {
                    if (snake[i].x === x && snake[i].y === y) {
                        return true;  // Еда находится на змейке
                    }
                }
                return false;
            }

            // Обработчик нажатий клавиш
            document.addEventListener('keydown', function(event) {
                switch (event.key) {
                    case 'ArrowUp':
                        if (directionY === 0) {  // Движение вверх возможно только если не движемся по вертикали
                            directionX = 0;
                            directionY = -1;
                        }
                        break;
                    case 'ArrowDown':
                        if (directionY === 0) {
                            directionX = 0;
                            directionY = 1;
                        }
                        break;
                    case 'ArrowLeft':
                        if (directionX === 0) {
                            directionX = -1;
                            directionY = 0;
                        }
                        break;
                    case 'ArrowRight':
                        if (directionX === 0) {
                            directionX = 1;
                            directionY = 0;
                        }
                        break;
                }
            });

            // Перезапуск игры при нажатии Enter
            document.addEventListener('keydown', function(event) {
                if (gameOver && event.key === 'Enter') {
                    resetGame();
                }
            });

            // Очистка холста
            function clearCanvas() {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
            }

            // Обновление игры
            function update() {
                if (!gameOver) {
                    clearCanvas();
                    drawGrid();
                    moveSnake();
                    drawSnake();
                    drawFood();
                    drawScore();
                } else {
                    ctx.fillStyle = 'red';
                    ctx.font = '40px Arial';
                    ctx.fillText('Game Over', canvas.width / 4, canvas.height / 2);
                    ctx.fillText('Score: ' + score, canvas.width / 4, canvas.height / 2 + 50);
                }
            }

            // Функция перезапуска игры
            function resetGame() {
                snake = [
                    { x: 10, y: 10 },
                    { x: 9, y: 10 },
                    { x: 8, y: 10 }
                ];
                directionX = 1;
                directionY = 0;
                score = 0;
                generateFood();
                gameOver = false;
                update();
            }
            
            // Запуск игры
            setInterval(update, 100);
            drawGrid();

        </script>
    </body>
</html>
